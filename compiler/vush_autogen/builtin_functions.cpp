// This file has been autogenerated.
// Do not modify manually.
//

#include <anton/flat_hash_map.hpp>

#include <vush_ast/ast.hpp>
#include <vush_core/memory.hpp>

#define ALLOC_BUILTIN(value)                                 \
  VUSH_ALLOCATE(ast::Type_Builtin, allocator, Source_Info{}, \
                ast::Type_Builtin_Kind::value)
#define ALLOC_PARAM(name, type)                                                \
  VUSH_ALLOCATE(ast::Fn_Parameter, allocator, ast::Identifier{name, {}}, type, \
                ast::Identifier{""_sv, {}}, Source_Info{})
#define ALLOC_ARRAY_PARAM(...)                                   \
  VUSH_ALLOCATE(Array<ast::Fn_Parameter*>, allocator, allocator, \
                anton::variadic_construct __VA_OPT__(, ) __VA_ARGS__)
#define ALLOC_FUNCTION(identifier, return_type, parameter_array)               \
  VUSH_ALLOCATE(ast::Decl_Function, allocator, ast::Attr_List{},               \
                ast::Identifier{identifier, {}}, parameter_array, return_type, \
                ast::Node_List{}, true, Source_Info{})

namespace vush {
  using namespace anton::literals;

  anton::Flat_Hash_Map<anton::String_View, ast::Overload_Group*>
  get_builtin_functions_declarations(Allocator* const allocator)
  {
    // Overallocate to lower pressure.
    anton::Flat_Hash_Map<anton::String_View, ast::Overload_Group*> groups(
      anton::reserve, 324, allocator);
    auto group_0 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "radians"_sv);
    group_0->overloads.push_back(ALLOC_FUNCTION(
      "radians"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pdegrees"_sv, ALLOC_BUILTIN(e_float)))));
    group_0->overloads.push_back(ALLOC_FUNCTION(
      "radians"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pdegrees"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_0->overloads.push_back(ALLOC_FUNCTION(
      "radians"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pdegrees"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_0->overloads.push_back(ALLOC_FUNCTION(
      "radians"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pdegrees"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("radians"_sv, group_0);
    auto group_1 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "degrees"_sv);
    group_1->overloads.push_back(ALLOC_FUNCTION(
      "degrees"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pradians"_sv, ALLOC_BUILTIN(e_float)))));
    group_1->overloads.push_back(ALLOC_FUNCTION(
      "degrees"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pradians"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_1->overloads.push_back(ALLOC_FUNCTION(
      "degrees"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pradians"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_1->overloads.push_back(ALLOC_FUNCTION(
      "degrees"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("pradians"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("degrees"_sv, group_1);
    auto group_2 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "sin"_sv);
    group_2->overloads.push_back(ALLOC_FUNCTION(
      "sin"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_float)))));
    group_2->overloads.push_back(ALLOC_FUNCTION(
      "sin"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_2->overloads.push_back(ALLOC_FUNCTION(
      "sin"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_2->overloads.push_back(ALLOC_FUNCTION(
      "sin"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("sin"_sv, group_2);
    auto group_3 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "cos"_sv);
    group_3->overloads.push_back(ALLOC_FUNCTION(
      "cos"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_float)))));
    group_3->overloads.push_back(ALLOC_FUNCTION(
      "cos"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_3->overloads.push_back(ALLOC_FUNCTION(
      "cos"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_3->overloads.push_back(ALLOC_FUNCTION(
      "cos"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("cos"_sv, group_3);
    auto group_4 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "tan"_sv);
    group_4->overloads.push_back(ALLOC_FUNCTION(
      "tan"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_float)))));
    group_4->overloads.push_back(ALLOC_FUNCTION(
      "tan"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_4->overloads.push_back(ALLOC_FUNCTION(
      "tan"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_4->overloads.push_back(ALLOC_FUNCTION(
      "tan"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("angle"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("tan"_sv, group_4);
    auto group_5 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "asin"_sv);
    group_5->overloads.push_back(ALLOC_FUNCTION(
      "asin"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_5->overloads.push_back(ALLOC_FUNCTION(
      "asin"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_5->overloads.push_back(ALLOC_FUNCTION(
      "asin"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_5->overloads.push_back(ALLOC_FUNCTION(
      "asin"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("asin"_sv, group_5);
    auto group_6 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "acos"_sv);
    group_6->overloads.push_back(ALLOC_FUNCTION(
      "acos"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_6->overloads.push_back(ALLOC_FUNCTION(
      "acos"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_6->overloads.push_back(ALLOC_FUNCTION(
      "acos"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_6->overloads.push_back(ALLOC_FUNCTION(
      "acos"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("acos"_sv, group_6);
    auto group_7 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atan"_sv);
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y_over_x"_sv, ALLOC_BUILTIN(e_float)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y_over_x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y_over_x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_7->overloads.push_back(ALLOC_FUNCTION(
      "atan"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("y_over_x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("atan"_sv, group_7);
    auto group_8 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "sinh"_sv);
    group_8->overloads.push_back(ALLOC_FUNCTION(
      "sinh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_8->overloads.push_back(ALLOC_FUNCTION(
      "sinh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_8->overloads.push_back(ALLOC_FUNCTION(
      "sinh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_8->overloads.push_back(ALLOC_FUNCTION(
      "sinh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("sinh"_sv, group_8);
    auto group_9 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "cosh"_sv);
    group_9->overloads.push_back(ALLOC_FUNCTION(
      "cosh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_9->overloads.push_back(ALLOC_FUNCTION(
      "cosh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_9->overloads.push_back(ALLOC_FUNCTION(
      "cosh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_9->overloads.push_back(ALLOC_FUNCTION(
      "cosh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("cosh"_sv, group_9);
    auto group_10 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "tanh"_sv);
    group_10->overloads.push_back(ALLOC_FUNCTION(
      "tanh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_10->overloads.push_back(ALLOC_FUNCTION(
      "tanh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_10->overloads.push_back(ALLOC_FUNCTION(
      "tanh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_10->overloads.push_back(ALLOC_FUNCTION(
      "tanh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("tanh"_sv, group_10);
    auto group_11 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "asinh"_sv);
    group_11->overloads.push_back(ALLOC_FUNCTION(
      "asinh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_11->overloads.push_back(ALLOC_FUNCTION(
      "asinh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_11->overloads.push_back(ALLOC_FUNCTION(
      "asinh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_11->overloads.push_back(ALLOC_FUNCTION(
      "asinh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("asinh"_sv, group_11);
    auto group_12 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "acosh"_sv);
    group_12->overloads.push_back(ALLOC_FUNCTION(
      "acosh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_12->overloads.push_back(ALLOC_FUNCTION(
      "acosh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_12->overloads.push_back(ALLOC_FUNCTION(
      "acosh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_12->overloads.push_back(ALLOC_FUNCTION(
      "acosh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("acosh"_sv, group_12);
    auto group_13 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atanh"_sv);
    group_13->overloads.push_back(ALLOC_FUNCTION(
      "atanh"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_13->overloads.push_back(ALLOC_FUNCTION(
      "atanh"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_13->overloads.push_back(ALLOC_FUNCTION(
      "atanh"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_13->overloads.push_back(ALLOC_FUNCTION(
      "atanh"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("atanh"_sv, group_13);
    auto group_14 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "pow"_sv);
    group_14->overloads.push_back(ALLOC_FUNCTION(
      "pow"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_14->overloads.push_back(ALLOC_FUNCTION(
      "pow"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_14->overloads.push_back(ALLOC_FUNCTION(
      "pow"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_14->overloads.push_back(ALLOC_FUNCTION(
      "pow"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("pow"_sv, group_14);
    auto group_15 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "exp"_sv);
    group_15->overloads.push_back(ALLOC_FUNCTION(
      "exp"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_15->overloads.push_back(ALLOC_FUNCTION(
      "exp"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_15->overloads.push_back(ALLOC_FUNCTION(
      "exp"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_15->overloads.push_back(ALLOC_FUNCTION(
      "exp"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("exp"_sv, group_15);
    auto group_16 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "log"_sv);
    group_16->overloads.push_back(ALLOC_FUNCTION(
      "log"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_16->overloads.push_back(ALLOC_FUNCTION(
      "log"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_16->overloads.push_back(ALLOC_FUNCTION(
      "log"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_16->overloads.push_back(ALLOC_FUNCTION(
      "log"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("log"_sv, group_16);
    auto group_17 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "exp2"_sv);
    group_17->overloads.push_back(ALLOC_FUNCTION(
      "exp2"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_17->overloads.push_back(ALLOC_FUNCTION(
      "exp2"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_17->overloads.push_back(ALLOC_FUNCTION(
      "exp2"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_17->overloads.push_back(ALLOC_FUNCTION(
      "exp2"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("exp2"_sv, group_17);
    auto group_18 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "log2"_sv);
    group_18->overloads.push_back(ALLOC_FUNCTION(
      "log2"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_18->overloads.push_back(ALLOC_FUNCTION(
      "log2"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_18->overloads.push_back(ALLOC_FUNCTION(
      "log2"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_18->overloads.push_back(ALLOC_FUNCTION(
      "log2"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("log2"_sv, group_18);
    auto group_19 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "sqrt"_sv);
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_19->overloads.push_back(ALLOC_FUNCTION(
      "sqrt"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("sqrt"_sv, group_19);
    auto group_20 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "inversesqrt"_sv);
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_20->overloads.push_back(ALLOC_FUNCTION(
      "inversesqrt"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("inversesqrt"_sv, group_20);
    auto group_21 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "abs"_sv);
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_21->overloads.push_back(ALLOC_FUNCTION(
      "abs"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)))));
    groups.emplace("abs"_sv, group_21);
    auto group_22 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "sign"_sv);
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_22->overloads.push_back(ALLOC_FUNCTION(
      "sign"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)))));
    groups.emplace("sign"_sv, group_22);
    auto group_23 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "floor"_sv);
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_23->overloads.push_back(ALLOC_FUNCTION(
      "floor"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("floor"_sv, group_23);
    auto group_24 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "trunc"_sv);
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_24->overloads.push_back(ALLOC_FUNCTION(
      "trunc"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("trunc"_sv, group_24);
    auto group_25 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "round"_sv);
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_25->overloads.push_back(ALLOC_FUNCTION(
      "round"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("round"_sv, group_25);
    auto group_26 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "roundEven"_sv);
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_26->overloads.push_back(ALLOC_FUNCTION(
      "roundEven"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("roundEven"_sv, group_26);
    auto group_27 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "ceil"_sv);
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_27->overloads.push_back(ALLOC_FUNCTION(
      "ceil"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("ceil"_sv, group_27);
    auto group_28 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "fract"_sv);
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_28->overloads.push_back(ALLOC_FUNCTION(
      "fract"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("fract"_sv, group_28);
    auto group_29 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "mod"_sv);
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_29->overloads.push_back(ALLOC_FUNCTION(
      "mod"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("mod"_sv, group_29);
    auto group_30 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "modf"_sv);
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_30->overloads.push_back(ALLOC_FUNCTION(
      "modf"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("modf"_sv, group_30);
    auto group_31 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "min"_sv);
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_31->overloads.push_back(ALLOC_FUNCTION(
      "min"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("min"_sv, group_31);
    auto group_32 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "max"_sv);
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_32->overloads.push_back(ALLOC_FUNCTION(
      "max"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("max"_sv, group_32);
    auto group_33 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "clamp"_sv);
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_float)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_float)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_float)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_float)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_double)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_double)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_double)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_double)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_int)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_int)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_int)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_int)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_uint)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_uint)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_uint)))));
    group_33->overloads.push_back(ALLOC_FUNCTION(
      "clamp"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("min_val"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("max_val"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("clamp"_sv, group_33);
    auto group_34 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packUnorm2x16"_sv);
    group_34->overloads.push_back(ALLOC_FUNCTION(
      "packUnorm2x16"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("packUnorm2x16"_sv, group_34);
    auto group_35 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packSnorm2x16"_sv);
    group_35->overloads.push_back(ALLOC_FUNCTION(
      "packSnorm2x16"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("packSnorm2x16"_sv, group_35);
    auto group_36 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packUnorm4x8"_sv);
    group_36->overloads.push_back(ALLOC_FUNCTION(
      "packUnorm4x8"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("packUnorm4x8"_sv, group_36);
    auto group_37 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packSnorm4x8"_sv);
    group_37->overloads.push_back(ALLOC_FUNCTION(
      "packSnorm4x8"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("packSnorm4x8"_sv, group_37);
    auto group_38 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackUnorm2x16"_sv);
    group_38->overloads.push_back(ALLOC_FUNCTION(
      "unpackUnorm2x16"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("unpackUnorm2x16"_sv, group_38);
    auto group_39 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackSnorm2x16"_sv);
    group_39->overloads.push_back(ALLOC_FUNCTION(
      "unpackSnorm2x16"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("unpackSnorm2x16"_sv, group_39);
    auto group_40 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackUnorm4x8"_sv);
    group_40->overloads.push_back(ALLOC_FUNCTION(
      "unpackUnorm4x8"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("unpackUnorm4x8"_sv, group_40);
    auto group_41 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackSnorm4x8"_sv);
    group_41->overloads.push_back(ALLOC_FUNCTION(
      "unpackSnorm4x8"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("unpackSnorm4x8"_sv, group_41);
    auto group_42 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packHalf2x16"_sv);
    group_42->overloads.push_back(ALLOC_FUNCTION(
      "packHalf2x16"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("packHalf2x16"_sv, group_42);
    auto group_43 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackHalf2x16"_sv);
    group_43->overloads.push_back(ALLOC_FUNCTION(
      "unpackHalf2x16"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("unpackHalf2x16"_sv, group_43);
    auto group_44 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "packDouble2x32"_sv);
    group_44->overloads.push_back(ALLOC_FUNCTION(
      "packDouble2x32"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_uvec2)))));
    groups.emplace("packDouble2x32"_sv, group_44);
    auto group_45 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "unpackDouble2x32"_sv);
    group_45->overloads.push_back(ALLOC_FUNCTION(
      "unpackDouble2x32"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("v"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("unpackDouble2x32"_sv, group_45);
    auto group_46 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "length"_sv);
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_46->overloads.push_back(ALLOC_FUNCTION(
      "length"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("length"_sv, group_46);
    auto group_47 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "distance"_sv);
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_float)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_double)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_47->overloads.push_back(ALLOC_FUNCTION(
      "distance"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p0"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("p1"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("distance"_sv, group_47);
    auto group_48 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dot"_sv);
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_float)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_double)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_48->overloads.push_back(ALLOC_FUNCTION(
      "dot"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("dot"_sv, group_48);
    auto group_49 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "cross"_sv);
    group_49->overloads.push_back(ALLOC_FUNCTION(
      "cross"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_49->overloads.push_back(ALLOC_FUNCTION(
      "cross"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    groups.emplace("cross"_sv, group_49);
    auto group_50 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "normalize"_sv);
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_float)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_double)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_50->overloads.push_back(ALLOC_FUNCTION(
      "normalize"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("normalize"_sv, group_50);
    auto group_51 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "faceforward"_sv);
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_float)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_double)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_51->overloads.push_back(ALLOC_FUNCTION(
      "faceforward"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("Nref"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("faceforward"_sv, group_51);
    auto group_52 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "reflect"_sv);
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_float)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_double)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_52->overloads.push_back(ALLOC_FUNCTION(
      "reflect"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec4)))));
    groups.emplace("reflect"_sv, group_52);
    auto group_53 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "refract"_sv);
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_float)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_float)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_float)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_float)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_double)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_double)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_double)))));
    group_53->overloads.push_back(ALLOC_FUNCTION(
      "refract"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("I"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("N"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("eta"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("refract"_sv, group_53);
    auto group_54 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "matrixCompMult"_sv);
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_54->overloads.push_back(ALLOC_FUNCTION(
      "matrixCompMult"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    groups.emplace("matrixCompMult"_sv, group_54);
    auto group_55 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "outerProduct"_sv);
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_55->overloads.push_back(ALLOC_FUNCTION(
      "outerProduct"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("c"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("r"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("outerProduct"_sv, group_55);
    auto group_56 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "transpose"_sv);
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_56->overloads.push_back(ALLOC_FUNCTION(
      "transpose"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    groups.emplace("transpose"_sv, group_56);
    auto group_57 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "determinant"_sv);
    group_57->overloads.push_back(ALLOC_FUNCTION(
      "determinant"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_57->overloads.push_back(ALLOC_FUNCTION(
      "determinant"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_57->overloads.push_back(ALLOC_FUNCTION(
      "determinant"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat4)))));
    groups.emplace("determinant"_sv, group_57);
    auto group_58 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "inverse"_sv);
    group_58->overloads.push_back(ALLOC_FUNCTION(
      "inverse"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_58->overloads.push_back(ALLOC_FUNCTION(
      "inverse"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_58->overloads.push_back(ALLOC_FUNCTION(
      "inverse"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("m"_sv, ALLOC_BUILTIN(e_mat4)))));
    groups.emplace("inverse"_sv, group_58);
    auto group_59 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "lessThan"_sv);
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_59->overloads.push_back(ALLOC_FUNCTION(
      "lessThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("lessThan"_sv, group_59);
    auto group_60 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "lessThanEqual"_sv);
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_60->overloads.push_back(ALLOC_FUNCTION(
      "lessThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("lessThanEqual"_sv, group_60);
    auto group_61 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "greaterThan"_sv);
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_61->overloads.push_back(ALLOC_FUNCTION(
      "greaterThan"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("greaterThan"_sv, group_61);
    auto group_62 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "greaterThanEqual"_sv);
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_62->overloads.push_back(ALLOC_FUNCTION(
      "greaterThanEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("greaterThanEqual"_sv, group_62);
    auto group_63 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "equal"_sv);
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_63->overloads.push_back(ALLOC_FUNCTION(
      "equal"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("equal"_sv, group_63);
    auto group_64 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "notEqual"_sv);
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_64->overloads.push_back(ALLOC_FUNCTION(
      "notEqual"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("notEqual"_sv, group_64);
    auto group_65 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "any"_sv);
    group_65->overloads.push_back(ALLOC_FUNCTION(
      "any"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec2)))));
    group_65->overloads.push_back(ALLOC_FUNCTION(
      "any"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec3)))));
    group_65->overloads.push_back(ALLOC_FUNCTION(
      "any"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec4)))));
    groups.emplace("any"_sv, group_65);
    auto group_66 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "all"_sv);
    group_66->overloads.push_back(ALLOC_FUNCTION(
      "all"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec2)))));
    group_66->overloads.push_back(ALLOC_FUNCTION(
      "all"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec3)))));
    group_66->overloads.push_back(ALLOC_FUNCTION(
      "all"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec4)))));
    groups.emplace("all"_sv, group_66);
    auto group_67 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "not"_sv);
    group_67->overloads.push_back(ALLOC_FUNCTION(
      "not"_sv, ALLOC_BUILTIN(e_bvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec2)))));
    group_67->overloads.push_back(ALLOC_FUNCTION(
      "not"_sv, ALLOC_BUILTIN(e_bvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec3)))));
    group_67->overloads.push_back(ALLOC_FUNCTION(
      "not"_sv, ALLOC_BUILTIN(e_bvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_bvec4)))));
    groups.emplace("not"_sv, group_67);
    auto group_68 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "uaddCarry"_sv);
    group_68->overloads.push_back(ALLOC_FUNCTION(
      "uaddCarry"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("carry"_sv, ALLOC_BUILTIN(e_uint)))));
    group_68->overloads.push_back(ALLOC_FUNCTION(
      "uaddCarry"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("carry"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_68->overloads.push_back(ALLOC_FUNCTION(
      "uaddCarry"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("carry"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_68->overloads.push_back(ALLOC_FUNCTION(
      "uaddCarry"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("carry"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("uaddCarry"_sv, group_68);
    auto group_69 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "usubBorrow"_sv);
    group_69->overloads.push_back(ALLOC_FUNCTION(
      "usubBorrow"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("borrow"_sv, ALLOC_BUILTIN(e_uint)))));
    group_69->overloads.push_back(ALLOC_FUNCTION(
      "usubBorrow"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("borrow"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_69->overloads.push_back(ALLOC_FUNCTION(
      "usubBorrow"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("borrow"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_69->overloads.push_back(ALLOC_FUNCTION(
      "usubBorrow"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("borrow"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("usubBorrow"_sv, group_69);
    auto group_70 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "umulExtended"_sv);
    group_70->overloads.push_back(ALLOC_FUNCTION(
      "umulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_uint)))));
    group_70->overloads.push_back(ALLOC_FUNCTION(
      "umulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_70->overloads.push_back(ALLOC_FUNCTION(
      "umulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_70->overloads.push_back(ALLOC_FUNCTION(
      "umulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("umulExtended"_sv, group_70);
    auto group_71 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "imulExtended"_sv);
    group_71->overloads.push_back(ALLOC_FUNCTION(
      "imulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_int)))));
    group_71->overloads.push_back(ALLOC_FUNCTION(
      "imulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_71->overloads.push_back(ALLOC_FUNCTION(
      "imulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_71->overloads.push_back(ALLOC_FUNCTION(
      "imulExtended"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("x"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("y"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("msb"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("lsb"_sv, ALLOC_BUILTIN(e_ivec4)))));
    groups.emplace("imulExtended"_sv, group_71);
    auto group_72 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "bitfieldExtract"_sv);
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_72->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldExtract"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("bitfieldExtract"_sv, group_72);
    auto group_73 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "bitfieldInsert"_sv);
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    group_73->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldInsert"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("insert"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bits"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("bitfieldInsert"_sv, group_73);
    auto group_74 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "bitfieldReverse"_sv);
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_int)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uint)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_74->overloads.push_back(ALLOC_FUNCTION(
      "bitfieldReverse"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("bitfieldReverse"_sv, group_74);
    auto group_75 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "bitCount"_sv);
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_int)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uint)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_75->overloads.push_back(ALLOC_FUNCTION(
      "bitCount"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("bitCount"_sv, group_75);
    auto group_76 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "findLSB"_sv);
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_int)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uint)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_76->overloads.push_back(ALLOC_FUNCTION(
      "findLSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("findLSB"_sv, group_76);
    auto group_77 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "findMSB"_sv);
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_int)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uint)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_77->overloads.push_back(ALLOC_FUNCTION(
      "findMSB"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("base"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("findMSB"_sv, group_77);
    auto group_78 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureSize"_sv);
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArrayShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(ALLOC_FUNCTION(
      "textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_samplerBuffer)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isamplerBuffer)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usamplerBuffer)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DMS)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DMS)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DMS)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DMSArray)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DMSArray)))));
    group_78->overloads.push_back(
      ALLOC_FUNCTION("textureSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DMSArray)))));
    groups.emplace("textureSize"_sv, group_78);
    auto group_79 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureQueryLod"_sv);
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_79->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLod"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    groups.emplace("textureQueryLod"_sv, group_79);
    auto group_80 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureQueryLevels"_sv);
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler1D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler1D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler3D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler3D)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_samplerCube)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)))));
    group_80->overloads.push_back(
      ALLOC_FUNCTION("textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)))));
    group_80->overloads.push_back(ALLOC_FUNCTION(
      "textureQueryLevels"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArrayShadow)))));
    groups.emplace("textureQueryLevels"_sv, group_80);
    auto group_81 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureSamples"_sv);
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DMS)))));
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DMS)))));
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DMS)))));
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_sampler2DMSArray)))));
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_isampler2DMSArray)))));
    group_81->overloads.push_back(
      ALLOC_FUNCTION("textureSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "sampler"_sv, ALLOC_BUILTIN(e_usampler2DMSArray)))));
    groups.emplace("textureSamples"_sv, group_81);
    auto group_82 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "texture"_sv);
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(
      ALLOC_FUNCTION("texture"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_82->overloads.push_back(ALLOC_FUNCTION(
      "texture"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_float)))));
    groups.emplace("texture"_sv, group_82);
    auto group_83 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProj"_sv);
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_83->overloads.push_back(ALLOC_FUNCTION(
      "textureProj"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("textureProj"_sv, group_83);
    auto group_84 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "textureLod"_sv);
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(
      ALLOC_FUNCTION("textureLod"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(
      ALLOC_FUNCTION("textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(
      ALLOC_FUNCTION("textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_84->overloads.push_back(ALLOC_FUNCTION(
      "textureLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    groups.emplace("textureLod"_sv, group_84);
    auto group_85 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureOffset"_sv);
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_85->overloads.push_back(ALLOC_FUNCTION(
      "textureOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureOffset"_sv, group_85);
    auto group_86 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "texelFetch"_sv);
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerBuffer)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerBuffer)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerBuffer)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(
      ALLOC_FUNCTION("texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DMS)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(
      ALLOC_FUNCTION("texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DMS)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(
      ALLOC_FUNCTION("texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DMS)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_86->overloads.push_back(ALLOC_FUNCTION(
      "texelFetch"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("texelFetch"_sv, group_86);
    auto group_87 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "texelFetchOffset"_sv);
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_87->overloads.push_back(ALLOC_FUNCTION(
      "texelFetchOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("texelFetchOffset"_sv, group_87);
    auto group_88 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProjOffset"_sv);
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("bias"_sv, ALLOC_BUILTIN(e_float)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_88->overloads.push_back(ALLOC_FUNCTION(
      "textureProjOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureProjOffset"_sv, group_88);
    auto group_89 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureLodOffset"_sv);
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_89->overloads.push_back(ALLOC_FUNCTION(
      "textureLodOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("textureLodOffset"_sv, group_89);
    auto group_90 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProjLod"_sv);
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    group_90->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLod"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)))));
    groups.emplace("textureProjLod"_sv, group_90);
    auto group_91 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProjLodOffset"_sv);
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_91->overloads.push_back(ALLOC_FUNCTION(
      "textureProjLodOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("lod"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureProjLodOffset"_sv, group_91);
    auto group_92 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureGrad"_sv);
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(
      ALLOC_FUNCTION("textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(
      ALLOC_FUNCTION("textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(
      ALLOC_FUNCTION("textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_92->overloads.push_back(ALLOC_FUNCTION(
      "textureGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("textureGrad"_sv, group_92);
    auto group_93 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureGradOffset"_sv);
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_93->overloads.push_back(ALLOC_FUNCTION(
      "textureGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureGradOffset"_sv, group_93);
    auto group_94 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProjGrad"_sv);
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)))));
    group_94->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGrad"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("textureProjGrad"_sv, group_94);
    auto group_95 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureProjGradOffset"_sv);
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler1DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_int)))));
    group_95->overloads.push_back(ALLOC_FUNCTION(
      "textureProjGradOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("dPdx"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("dPdy"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureProjGradOffset"_sv, group_95);
    auto group_96 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureGather"_sv);
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(
      ALLOC_FUNCTION("textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCube)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
                       ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usamplerCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_samplerCubeArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec4)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)))));
    group_96->overloads.push_back(ALLOC_FUNCTION(
      "textureGather"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)))));
    groups.emplace("textureGather"_sv, group_96);
    auto group_97 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureGatherOffset"_sv);
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_97->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_ivec2)))));
    groups.emplace("textureGatherOffset"_sv, group_97);
    auto group_98 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                  "textureGatherOffsets"_sv);
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2D)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_isampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_usampler2DRect)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM(
          "offsets"_sv,
          VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                        ALLOC_BUILTIN(e_ivec2),
                        VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                      ast::lt_integer_i32, 4, Source_Info{}))),
        ALLOC_PARAM("comp"_sv, ALLOC_BUILTIN(e_int)))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DArrayShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec3)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    group_98->overloads.push_back(ALLOC_FUNCTION(
      "textureGatherOffsets"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("sampler"_sv, ALLOC_BUILTIN(e_sampler2DRectShadow)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_vec2)),
        ALLOC_PARAM("refZ"_sv, ALLOC_BUILTIN(e_float)),
        ALLOC_PARAM("offsets"_sv,
                    VUSH_ALLOCATE(ast::Type_Array, allocator, Source_Info{},
                                  ALLOC_BUILTIN(e_ivec2),
                                  VUSH_ALLOCATE(ast::Lt_Integer, allocator,
                                                ast::lt_integer_i32, 4,
                                                Source_Info{}))))));
    groups.emplace("textureGatherOffsets"_sv, group_98);
    auto group_99 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicAdd"_sv);
    group_99->overloads.push_back(ALLOC_FUNCTION(
      "atomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_99->overloads.push_back(ALLOC_FUNCTION(
      "atomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicAdd"_sv, group_99);
    auto group_100 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicMin"_sv);
    group_100->overloads.push_back(ALLOC_FUNCTION(
      "atomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_100->overloads.push_back(ALLOC_FUNCTION(
      "atomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicMin"_sv, group_100);
    auto group_101 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicMax"_sv);
    group_101->overloads.push_back(ALLOC_FUNCTION(
      "atomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_101->overloads.push_back(ALLOC_FUNCTION(
      "atomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicMax"_sv, group_101);
    auto group_102 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicAnd"_sv);
    group_102->overloads.push_back(ALLOC_FUNCTION(
      "atomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_102->overloads.push_back(ALLOC_FUNCTION(
      "atomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicAnd"_sv, group_102);
    auto group_103 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicOr"_sv);
    group_103->overloads.push_back(ALLOC_FUNCTION(
      "atomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_103->overloads.push_back(ALLOC_FUNCTION(
      "atomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicOr"_sv, group_103);
    auto group_104 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "atomicXor"_sv);
    group_104->overloads.push_back(ALLOC_FUNCTION(
      "atomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_104->overloads.push_back(ALLOC_FUNCTION(
      "atomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicXor"_sv, group_104);
    auto group_105 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "atomicExchange"_sv);
    group_105->overloads.push_back(ALLOC_FUNCTION(
      "atomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_105->overloads.push_back(ALLOC_FUNCTION(
      "atomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicExchange"_sv, group_105);
    auto group_106 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "atomicCompSwap"_sv);
    group_106->overloads.push_back(ALLOC_FUNCTION(
      "atomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_106->overloads.push_back(ALLOC_FUNCTION(
      "atomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("mem"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("atomicCompSwap"_sv, group_106);
    auto group_107 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "imageSize"_sv);
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_imageCubeArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_image2DArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimage2DArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimage2DArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_image1DArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimage1DArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimage1DArray)))));
    group_107->overloads.push_back(ALLOC_FUNCTION(
      "imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_image2DMSArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_ivec3),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimageBuffer)))));
    group_107->overloads.push_back(
      ALLOC_FUNCTION("imageSize"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimageBuffer)))));
    groups.emplace("imageSize"_sv, group_107);
    auto group_108 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageSamples"_sv);
    group_108->overloads.push_back(ALLOC_FUNCTION(
      "imageSamples"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)))));
    group_108->overloads.push_back(
      ALLOC_FUNCTION("imageSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)))));
    group_108->overloads.push_back(
      ALLOC_FUNCTION("imageSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)))));
    group_108->overloads.push_back(
      ALLOC_FUNCTION("imageSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_image2DMSArray)))));
    group_108->overloads.push_back(
      ALLOC_FUNCTION("imageSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)))));
    group_108->overloads.push_back(
      ALLOC_FUNCTION("imageSamples"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)))));
    groups.emplace("imageSamples"_sv, group_108);
    auto group_109 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "imageLoad"_sv);
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(
      ALLOC_FUNCTION("imageLoad"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_109->overloads.push_back(ALLOC_FUNCTION(
      "imageLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageLoad"_sv, group_109);
    auto group_110 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "imageStore"_sv);
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_110->overloads.push_back(
      ALLOC_FUNCTION("imageStore"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_110->overloads.push_back(ALLOC_FUNCTION(
      "imageStore"_sv, ALLOC_BUILTIN(e_void),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("imageStore"_sv, group_110);
    auto group_111 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicAdd"_sv);
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_111->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAdd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicAdd"_sv, group_111);
    auto group_112 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicMin"_sv);
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_112->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMin"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicMin"_sv, group_112);
    auto group_113 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicMax"_sv);
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_113->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicMax"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicMax"_sv, group_113);
    auto group_114 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicAnd"_sv);
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_114->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicAnd"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicAnd"_sv, group_114);
    auto group_115 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicOr"_sv);
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_115->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicOr"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicOr"_sv, group_115);
    auto group_116 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicXor"_sv);
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_116->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicXor"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicXor"_sv, group_116);
    auto group_117 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicExchange"_sv);
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    group_117->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicExchange"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_float)))));
    groups.emplace("imageAtomicExchange"_sv, group_117);
    auto group_118 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "imageAtomicCompSwap"_sv);
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_uint)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_uint)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage3D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCube)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageBuffer)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_imageCubeArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimageCubeArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1D)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image1DArray)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage1DArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMS)),
                         ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(
      ALLOC_FUNCTION("imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_image2DMSArray)),
                       ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
                       ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
                       ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_iimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    group_118->overloads.push_back(ALLOC_FUNCTION(
      "imageAtomicCompSwap"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("image"_sv, ALLOC_BUILTIN(e_uimage2DMSArray)),
        ALLOC_PARAM("P"_sv, ALLOC_BUILTIN(e_ivec3)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("compare"_sv, ALLOC_BUILTIN(e_int)),
        ALLOC_PARAM("data"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("imageAtomicCompSwap"_sv, group_118);
    auto group_119 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdx"_sv);
    group_119->overloads.push_back(ALLOC_FUNCTION(
      "dFdx"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_119->overloads.push_back(ALLOC_FUNCTION(
      "dFdx"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_119->overloads.push_back(ALLOC_FUNCTION(
      "dFdx"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_119->overloads.push_back(ALLOC_FUNCTION(
      "dFdx"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdx"_sv, group_119);
    auto group_120 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdy"_sv);
    group_120->overloads.push_back(ALLOC_FUNCTION(
      "dFdy"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_120->overloads.push_back(ALLOC_FUNCTION(
      "dFdy"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_120->overloads.push_back(ALLOC_FUNCTION(
      "dFdy"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_120->overloads.push_back(ALLOC_FUNCTION(
      "dFdy"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdy"_sv, group_120);
    auto group_121 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdxFine"_sv);
    group_121->overloads.push_back(ALLOC_FUNCTION(
      "dFdxFine"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_121->overloads.push_back(ALLOC_FUNCTION(
      "dFdxFine"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_121->overloads.push_back(ALLOC_FUNCTION(
      "dFdxFine"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_121->overloads.push_back(ALLOC_FUNCTION(
      "dFdxFine"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdxFine"_sv, group_121);
    auto group_122 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdyFine"_sv);
    group_122->overloads.push_back(ALLOC_FUNCTION(
      "dFdyFine"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_122->overloads.push_back(ALLOC_FUNCTION(
      "dFdyFine"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_122->overloads.push_back(ALLOC_FUNCTION(
      "dFdyFine"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_122->overloads.push_back(ALLOC_FUNCTION(
      "dFdyFine"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdyFine"_sv, group_122);
    auto group_123 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdxCoarse"_sv);
    group_123->overloads.push_back(ALLOC_FUNCTION(
      "dFdxCoarse"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_123->overloads.push_back(ALLOC_FUNCTION(
      "dFdxCoarse"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_123->overloads.push_back(ALLOC_FUNCTION(
      "dFdxCoarse"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_123->overloads.push_back(ALLOC_FUNCTION(
      "dFdxCoarse"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdxCoarse"_sv, group_123);
    auto group_124 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "dFdyCoarse"_sv);
    group_124->overloads.push_back(ALLOC_FUNCTION(
      "dFdyCoarse"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_124->overloads.push_back(ALLOC_FUNCTION(
      "dFdyCoarse"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_124->overloads.push_back(ALLOC_FUNCTION(
      "dFdyCoarse"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_124->overloads.push_back(ALLOC_FUNCTION(
      "dFdyCoarse"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("dFdyCoarse"_sv, group_124);
    auto group_125 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "fwidth"_sv);
    group_125->overloads.push_back(ALLOC_FUNCTION(
      "fwidth"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_125->overloads.push_back(ALLOC_FUNCTION(
      "fwidth"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_125->overloads.push_back(ALLOC_FUNCTION(
      "fwidth"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_125->overloads.push_back(ALLOC_FUNCTION(
      "fwidth"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("fwidth"_sv, group_125);
    auto group_126 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "fwidthFine"_sv);
    group_126->overloads.push_back(ALLOC_FUNCTION(
      "fwidthFine"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_126->overloads.push_back(ALLOC_FUNCTION(
      "fwidthFine"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_126->overloads.push_back(ALLOC_FUNCTION(
      "fwidthFine"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_126->overloads.push_back(ALLOC_FUNCTION(
      "fwidthFine"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("fwidthFine"_sv, group_126);
    auto group_127 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "fwidthCoarse"_sv);
    group_127->overloads.push_back(ALLOC_FUNCTION(
      "fwidthCoarse"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_float)))));
    group_127->overloads.push_back(ALLOC_FUNCTION(
      "fwidthCoarse"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_127->overloads.push_back(ALLOC_FUNCTION(
      "fwidthCoarse"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_127->overloads.push_back(ALLOC_FUNCTION(
      "fwidthCoarse"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("p"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("fwidthCoarse"_sv, group_127);
    auto group_128 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "interpolateAtCentroid"_sv);
    group_128->overloads.push_back(
      ALLOC_FUNCTION("interpolateAtCentroid"_sv, ALLOC_BUILTIN(e_float),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_float)))));
    group_128->overloads.push_back(
      ALLOC_FUNCTION("interpolateAtCentroid"_sv, ALLOC_BUILTIN(e_vec2),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_128->overloads.push_back(
      ALLOC_FUNCTION("interpolateAtCentroid"_sv, ALLOC_BUILTIN(e_vec3),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_128->overloads.push_back(
      ALLOC_FUNCTION("interpolateAtCentroid"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(
                       ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec4)))));
    groups.emplace("interpolateAtCentroid"_sv, group_128);
    auto group_129 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "interpolateAtSample"_sv);
    group_129->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtSample"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_129->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtSample"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_129->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtSample"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_129->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtSample"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("interpolateAtSample"_sv, group_129);
    auto group_130 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "interpolateAtOffset"_sv);
    group_130->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtOffset"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_130->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtOffset"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_130->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtOffset"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_130->overloads.push_back(ALLOC_FUNCTION(
      "interpolateAtOffset"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("interpolant"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("offset"_sv, ALLOC_BUILTIN(e_vec2)))));
    groups.emplace("interpolateAtOffset"_sv, group_130);
    auto group_131 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "barrier"_sv);
    group_131->overloads.push_back(ALLOC_FUNCTION(
      "barrier"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("barrier"_sv, group_131);
    auto group_132 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "memoryBarrier"_sv);
    group_132->overloads.push_back(ALLOC_FUNCTION(
      "memoryBarrier"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("memoryBarrier"_sv, group_132);
    auto group_133 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "memoryBarrierAtomicCounter"_sv);
    group_133->overloads.push_back(
      ALLOC_FUNCTION("memoryBarrierAtomicCounter"_sv, ALLOC_BUILTIN(e_void),
                     *ALLOC_ARRAY_PARAM()));
    groups.emplace("memoryBarrierAtomicCounter"_sv, group_133);
    auto group_134 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "memoryBarrierBuffer"_sv);
    group_134->overloads.push_back(ALLOC_FUNCTION(
      "memoryBarrierBuffer"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("memoryBarrierBuffer"_sv, group_134);
    auto group_135 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "memoryBarrierShared"_sv);
    group_135->overloads.push_back(ALLOC_FUNCTION(
      "memoryBarrierShared"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("memoryBarrierShared"_sv, group_135);
    auto group_136 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "memoryBarrierImage"_sv);
    group_136->overloads.push_back(ALLOC_FUNCTION(
      "memoryBarrierImage"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("memoryBarrierImage"_sv, group_136);
    auto group_137 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "groupMemoryBarrier"_sv);
    group_137->overloads.push_back(ALLOC_FUNCTION(
      "groupMemoryBarrier"_sv, ALLOC_BUILTIN(e_void), *ALLOC_ARRAY_PARAM()));
    groups.emplace("groupMemoryBarrier"_sv, group_137);
    auto group_138 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "subpassLoad"_sv);
    group_138->overloads.push_back(
      ALLOC_FUNCTION("subpassLoad"_sv, ALLOC_BUILTIN(e_vec4),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "subpass"_sv, ALLOC_BUILTIN(e_subpassInput)))));
    group_138->overloads.push_back(
      ALLOC_FUNCTION("subpassLoad"_sv, ALLOC_BUILTIN(e_ivec4),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "subpass"_sv, ALLOC_BUILTIN(e_isubpassInput)))));
    group_138->overloads.push_back(
      ALLOC_FUNCTION("subpassLoad"_sv, ALLOC_BUILTIN(e_uvec4),
                     *ALLOC_ARRAY_PARAM(ALLOC_PARAM(
                       "subpass"_sv, ALLOC_BUILTIN(e_usubpassInput)))));
    group_138->overloads.push_back(ALLOC_FUNCTION(
      "subpassLoad"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("subpass"_sv, ALLOC_BUILTIN(e_subpassInputMS)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_138->overloads.push_back(ALLOC_FUNCTION(
      "subpassLoad"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("subpass"_sv, ALLOC_BUILTIN(e_isubpassInputMS)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    group_138->overloads.push_back(ALLOC_FUNCTION(
      "subpassLoad"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(
        ALLOC_PARAM("subpass"_sv, ALLOC_BUILTIN(e_usubpassInputMS)),
        ALLOC_PARAM("sample"_sv, ALLOC_BUILTIN(e_int)))));
    groups.emplace("subpassLoad"_sv, group_138);
    auto group_139 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "anyInvocation"_sv);
    group_139->overloads.push_back(ALLOC_FUNCTION(
      "anyInvocation"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("anyInvocation"_sv, group_139);
    auto group_140 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "allInvocations"_sv);
    group_140->overloads.push_back(ALLOC_FUNCTION(
      "allInvocations"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("allInvocations"_sv, group_140);
    auto group_141 = VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator,
                                   "allInvocationsEqual"_sv);
    group_141->overloads.push_back(ALLOC_FUNCTION(
      "allInvocationsEqual"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("allInvocationsEqual"_sv, group_141);
    auto group_142 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator+"_sv);
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_142->overloads.push_back(ALLOC_FUNCTION(
      "operator+"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    groups.emplace("operator+"_sv, group_142);
    auto group_143 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator-"_sv);
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_int)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uint)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_float)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_double)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_143->overloads.push_back(ALLOC_FUNCTION(
      "operator-"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    groups.emplace("operator-"_sv, group_143);
    auto group_144 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator*"_sv);
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_144->overloads.push_back(ALLOC_FUNCTION(
      "operator*"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    groups.emplace("operator*"_sv, group_144);
    auto group_145 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator/"_sv);
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_float),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_double),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_vec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_mat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat2x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat3x4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_145->overloads.push_back(ALLOC_FUNCTION(
      "operator/"_sv, ALLOC_BUILTIN(e_dmat4x3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    groups.emplace("operator/"_sv, group_145);
    auto group_146 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator%"_sv);
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_146->overloads.push_back(ALLOC_FUNCTION(
      "operator%"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("operator%"_sv, group_146);
    auto group_147 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator>"_sv);
    group_147->overloads.push_back(ALLOC_FUNCTION(
      "operator>"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_147->overloads.push_back(ALLOC_FUNCTION(
      "operator>"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_147->overloads.push_back(ALLOC_FUNCTION(
      "operator>"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_147->overloads.push_back(ALLOC_FUNCTION(
      "operator>"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("operator>"_sv, group_147);
    auto group_148 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator>="_sv);
    group_148->overloads.push_back(ALLOC_FUNCTION(
      "operator>="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_148->overloads.push_back(ALLOC_FUNCTION(
      "operator>="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_148->overloads.push_back(ALLOC_FUNCTION(
      "operator>="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_148->overloads.push_back(ALLOC_FUNCTION(
      "operator>="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("operator>="_sv, group_148);
    auto group_149 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator<"_sv);
    group_149->overloads.push_back(ALLOC_FUNCTION(
      "operator<"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_149->overloads.push_back(ALLOC_FUNCTION(
      "operator<"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_149->overloads.push_back(ALLOC_FUNCTION(
      "operator<"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_149->overloads.push_back(ALLOC_FUNCTION(
      "operator<"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("operator<"_sv, group_149);
    auto group_150 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator<="_sv);
    group_150->overloads.push_back(ALLOC_FUNCTION(
      "operator<="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_150->overloads.push_back(ALLOC_FUNCTION(
      "operator<="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_150->overloads.push_back(ALLOC_FUNCTION(
      "operator<="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_150->overloads.push_back(ALLOC_FUNCTION(
      "operator<="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    groups.emplace("operator<="_sv, group_150);
    auto group_151 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator=="_sv);
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bool)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bool)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_151->overloads.push_back(ALLOC_FUNCTION(
      "operator=="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    groups.emplace("operator=="_sv, group_151);
    auto group_152 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator!="_sv);
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bool)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bool)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_float)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_float)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_double)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_double)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_vec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_vec4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dvec4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bvec4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat2x4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat3x4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_mat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_mat4x3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x3)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat2x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat2x4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat3x4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat3x4)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x2)))));
    group_152->overloads.push_back(ALLOC_FUNCTION(
      "operator!="_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_dmat4x3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_dmat4x3)))));
    groups.emplace("operator!="_sv, group_152);
    auto group_153 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator&&"_sv);
    group_153->overloads.push_back(ALLOC_FUNCTION(
      "operator&&"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bool)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("operator&&"_sv, group_153);
    auto group_154 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator||"_sv);
    group_154->overloads.push_back(ALLOC_FUNCTION(
      "operator||"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bool)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("operator||"_sv, group_154);
    auto group_155 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator^^"_sv);
    group_155->overloads.push_back(ALLOC_FUNCTION(
      "operator^^"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_bool)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("operator^^"_sv, group_155);
    auto group_156 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator!"_sv);
    group_156->overloads.push_back(ALLOC_FUNCTION(
      "operator!"_sv, ALLOC_BUILTIN(e_bool),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_bool)))));
    groups.emplace("operator!"_sv, group_156);
    auto group_157 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator~"_sv);
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_int)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uint)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_157->overloads.push_back(ALLOC_FUNCTION(
      "operator~"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("value"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("operator~"_sv, group_157);
    auto group_158 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator<<"_sv);
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_158->overloads.push_back(ALLOC_FUNCTION(
      "operator<<"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    groups.emplace("operator<<"_sv, group_158);
    auto group_159 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator&"_sv);
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_159->overloads.push_back(ALLOC_FUNCTION(
      "operator&"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("operator&"_sv, group_159);
    auto group_160 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator|"_sv);
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_160->overloads.push_back(ALLOC_FUNCTION(
      "operator|"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("operator|"_sv, group_160);
    auto group_161 =
      VUSH_ALLOCATE(ast::Overload_Group, allocator, allocator, "operator^"_sv);
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_int),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uint),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec2)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec3)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_ivec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_int)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_ivec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_int)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_ivec4)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec2)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec2),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec2)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec3)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec3),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec3)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uvec4)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uint)))));
    group_161->overloads.push_back(ALLOC_FUNCTION(
      "operator^"_sv, ALLOC_BUILTIN(e_uvec4),
      *ALLOC_ARRAY_PARAM(ALLOC_PARAM("lhs"_sv, ALLOC_BUILTIN(e_uint)),
                         ALLOC_PARAM("rhs"_sv, ALLOC_BUILTIN(e_uvec4)))));
    groups.emplace("operator^"_sv, group_161);
    return groups;
  }
} // namespace vush
