// This file has been autogenerated.
// Do not modify manually.
//
#pragma once

#include <anton/optional.hpp>
#include <vush_syntax/syntax.hpp>

namespace vush {
  [[nodiscard]] SNOT const* get_type_named_mut(SNOT const* node);
  [[nodiscard]] SNOT const* get_type_named_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_type_array_mut(SNOT const* node);
  [[nodiscard]] SNOT const* get_type_array_base(SNOT const* node);
  [[nodiscard]] SNOT const* get_type_array_size(SNOT const* node);
  [[nodiscard]] SNOT const* get_attribute_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_attribute_parameter_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_attribute_parameter_keyed_key(SNOT const* node);
  [[nodiscard]] SNOT const*
  get_attribute_parameter_keyed_value(SNOT const* node);
  [[nodiscard]] SNOT const*
  get_attribute_parameter_positional_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_variable_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_variable_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_variable_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_variable_initializer(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_if_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_if_then_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_if_else_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_import_path(SNOT const* node);
  [[nodiscard]] SNOT const* get_struct_field_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_struct_field_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_struct_field_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_struct_field_initializer(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_struct_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_struct_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_struct_fields(SNOT const* node);
  [[nodiscard]] SNOT const* get_buffer_field_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_buffer_field_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_buffer_field_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_buffer_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_buffer_pass(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_buffer_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_buffer_fields(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_function_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_function_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_function_parameter_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_function_return_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_function_body(SNOT const* node);
  [[nodiscard]] SNOT const*
  get_decl_stage_function_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_stage_function_pass(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_stage_function_stage(SNOT const* node);
  [[nodiscard]] SNOT const*
  get_decl_stage_function_parameter_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_decl_stage_function_body(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_attribute_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_source(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_if_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_if_then_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_fn_parameter_if_else_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_if_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_if_then_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_if_else_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_binary_lhs(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_binary_operator(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_binary_rhs(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_block_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_identifier_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_prefix_operator(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_prefix_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_field_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_field_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_index_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_index_index(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_parentheses_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_field_initializer_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_field_initializer_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_index_initializer_index(SNOT const* node);
  [[nodiscard]] SNOT const* get_index_initializer_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_basic_initializer_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_init_type(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_init_initializers(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_call_identifier(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_call_arguments(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_bool_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_integer_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_integer_suffix(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_float_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_float_suffix(SNOT const* node);
  [[nodiscard]] SNOT const* get_expr_lt_string_value(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_assignment_lhs(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_assignment_operator(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_assignment_rhs(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_if_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_if_then_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_if_else_branch(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_switch_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_switch_arm_list(SNOT const* node);
  [[nodiscard]] SNOT const* get_switch_arm_body(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_while_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_while_statements(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_for_variable(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_for_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_for_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_for_body(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_do_while_body(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_do_while_condition(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_return_expression(SNOT const* node);
  [[nodiscard]] SNOT const* get_stmt_expression_expression(SNOT const* node);
} // namespace vush
