// This file has been autogenerated.
// Do not modify manually.
//

#include <vush_ast/ast.hpp>

#define BUILTIN_TYPE(identifier, value)                    \
  static const ast::Type_Builtin identifier(Source_Info{}, \
                                            ast::Type_Builtin_Kind::value)

namespace vush {
  BUILTIN_TYPE(builtin_void, e_void);
  BUILTIN_TYPE(builtin_bool, e_bool);
  BUILTIN_TYPE(builtin_int, e_int);
  BUILTIN_TYPE(builtin_uint, e_uint);
  BUILTIN_TYPE(builtin_float, e_float);
  BUILTIN_TYPE(builtin_double, e_double);
  BUILTIN_TYPE(builtin_vec2, e_vec2);
  BUILTIN_TYPE(builtin_vec3, e_vec3);
  BUILTIN_TYPE(builtin_vec4, e_vec4);
  BUILTIN_TYPE(builtin_dvec2, e_dvec2);
  BUILTIN_TYPE(builtin_dvec3, e_dvec3);
  BUILTIN_TYPE(builtin_dvec4, e_dvec4);
  BUILTIN_TYPE(builtin_bvec2, e_bvec2);
  BUILTIN_TYPE(builtin_bvec3, e_bvec3);
  BUILTIN_TYPE(builtin_bvec4, e_bvec4);
  BUILTIN_TYPE(builtin_ivec2, e_ivec2);
  BUILTIN_TYPE(builtin_ivec3, e_ivec3);
  BUILTIN_TYPE(builtin_ivec4, e_ivec4);
  BUILTIN_TYPE(builtin_uvec2, e_uvec2);
  BUILTIN_TYPE(builtin_uvec3, e_uvec3);
  BUILTIN_TYPE(builtin_uvec4, e_uvec4);
  BUILTIN_TYPE(builtin_mat2, e_mat2);
  BUILTIN_TYPE(builtin_mat3, e_mat3);
  BUILTIN_TYPE(builtin_mat4, e_mat4);
  BUILTIN_TYPE(builtin_mat2x3, e_mat2x3);
  BUILTIN_TYPE(builtin_mat2x4, e_mat2x4);
  BUILTIN_TYPE(builtin_mat3x2, e_mat3x2);
  BUILTIN_TYPE(builtin_mat3x4, e_mat3x4);
  BUILTIN_TYPE(builtin_mat4x2, e_mat4x2);
  BUILTIN_TYPE(builtin_mat4x3, e_mat4x3);
  BUILTIN_TYPE(builtin_dmat2, e_dmat2);
  BUILTIN_TYPE(builtin_dmat3, e_dmat3);
  BUILTIN_TYPE(builtin_dmat4, e_dmat4);
  BUILTIN_TYPE(builtin_dmat2x3, e_dmat2x3);
  BUILTIN_TYPE(builtin_dmat2x4, e_dmat2x4);
  BUILTIN_TYPE(builtin_dmat3x2, e_dmat3x2);
  BUILTIN_TYPE(builtin_dmat3x4, e_dmat3x4);
  BUILTIN_TYPE(builtin_dmat4x2, e_dmat4x2);
  BUILTIN_TYPE(builtin_dmat4x3, e_dmat4x3);
  BUILTIN_TYPE(builtin_sampler1D, e_sampler1D);
  BUILTIN_TYPE(builtin_texture1D, e_texture1D);
  BUILTIN_TYPE(builtin_image1D, e_image1D);
  BUILTIN_TYPE(builtin_sampler1DShadow, e_sampler1DShadow);
  BUILTIN_TYPE(builtin_sampler1DArray, e_sampler1DArray);
  BUILTIN_TYPE(builtin_texture1DArray, e_texture1DArray);
  BUILTIN_TYPE(builtin_image1DArray, e_image1DArray);
  BUILTIN_TYPE(builtin_sampler1DArrayShadow, e_sampler1DArrayShadow);
  BUILTIN_TYPE(builtin_sampler2D, e_sampler2D);
  BUILTIN_TYPE(builtin_texture2D, e_texture2D);
  BUILTIN_TYPE(builtin_image2D, e_image2D);
  BUILTIN_TYPE(builtin_sampler2DShadow, e_sampler2DShadow);
  BUILTIN_TYPE(builtin_sampler2DArray, e_sampler2DArray);
  BUILTIN_TYPE(builtin_texture2DArray, e_texture2DArray);
  BUILTIN_TYPE(builtin_image2DArray, e_image2DArray);
  BUILTIN_TYPE(builtin_sampler2DArrayShadow, e_sampler2DArrayShadow);
  BUILTIN_TYPE(builtin_sampler2DMS, e_sampler2DMS);
  BUILTIN_TYPE(builtin_texture2DMS, e_texture2DMS);
  BUILTIN_TYPE(builtin_image2DMS, e_image2DMS);
  BUILTIN_TYPE(builtin_sampler2DMSArray, e_sampler2DMSArray);
  BUILTIN_TYPE(builtin_texture2DMSArray, e_texture2DMSArray);
  BUILTIN_TYPE(builtin_image2DMSArray, e_image2DMSArray);
  BUILTIN_TYPE(builtin_sampler2DRect, e_sampler2DRect);
  BUILTIN_TYPE(builtin_texture2DRect, e_texture2DRect);
  BUILTIN_TYPE(builtin_image2DRect, e_image2DRect);
  BUILTIN_TYPE(builtin_sampler2DRectShadow, e_sampler2DRectShadow);
  BUILTIN_TYPE(builtin_sampler3D, e_sampler3D);
  BUILTIN_TYPE(builtin_texture3D, e_texture3D);
  BUILTIN_TYPE(builtin_image3D, e_image3D);
  BUILTIN_TYPE(builtin_samplerCube, e_samplerCube);
  BUILTIN_TYPE(builtin_textureCube, e_textureCube);
  BUILTIN_TYPE(builtin_imageCube, e_imageCube);
  BUILTIN_TYPE(builtin_samplerCubeShadow, e_samplerCubeShadow);
  BUILTIN_TYPE(builtin_samplerCubeArray, e_samplerCubeArray);
  BUILTIN_TYPE(builtin_textureCubeArray, e_textureCubeArray);
  BUILTIN_TYPE(builtin_imageCubeArray, e_imageCubeArray);
  BUILTIN_TYPE(builtin_samplerCubeArrayShadow, e_samplerCubeArrayShadow);
  BUILTIN_TYPE(builtin_samplerBuffer, e_samplerBuffer);
  BUILTIN_TYPE(builtin_textureBuffer, e_textureBuffer);
  BUILTIN_TYPE(builtin_imageBuffer, e_imageBuffer);
  BUILTIN_TYPE(builtin_subpassInput, e_subpassInput);
  BUILTIN_TYPE(builtin_subpassInputMS, e_subpassInputMS);
  BUILTIN_TYPE(builtin_isampler1D, e_isampler1D);
  BUILTIN_TYPE(builtin_itexture1D, e_itexture1D);
  BUILTIN_TYPE(builtin_iimage1D, e_iimage1D);
  BUILTIN_TYPE(builtin_isampler1DArray, e_isampler1DArray);
  BUILTIN_TYPE(builtin_itexture1DArray, e_itexture1DArray);
  BUILTIN_TYPE(builtin_iimage1DArray, e_iimage1DArray);
  BUILTIN_TYPE(builtin_isampler2D, e_isampler2D);
  BUILTIN_TYPE(builtin_itexture2D, e_itexture2D);
  BUILTIN_TYPE(builtin_iimage2D, e_iimage2D);
  BUILTIN_TYPE(builtin_isampler2DArray, e_isampler2DArray);
  BUILTIN_TYPE(builtin_itexture2DArray, e_itexture2DArray);
  BUILTIN_TYPE(builtin_iimage2DArray, e_iimage2DArray);
  BUILTIN_TYPE(builtin_isampler2DMS, e_isampler2DMS);
  BUILTIN_TYPE(builtin_itexture2DMS, e_itexture2DMS);
  BUILTIN_TYPE(builtin_iimage2DMS, e_iimage2DMS);
  BUILTIN_TYPE(builtin_isampler2DMSArray, e_isampler2DMSArray);
  BUILTIN_TYPE(builtin_itexture2DMSArray, e_itexture2DMSArray);
  BUILTIN_TYPE(builtin_iimage2DMSArray, e_iimage2DMSArray);
  BUILTIN_TYPE(builtin_isampler2DRect, e_isampler2DRect);
  BUILTIN_TYPE(builtin_itexture2DRect, e_itexture2DRect);
  BUILTIN_TYPE(builtin_iimage2DRect, e_iimage2DRect);
  BUILTIN_TYPE(builtin_isampler3D, e_isampler3D);
  BUILTIN_TYPE(builtin_itexture3D, e_itexture3D);
  BUILTIN_TYPE(builtin_iimage3D, e_iimage3D);
  BUILTIN_TYPE(builtin_isamplerCube, e_isamplerCube);
  BUILTIN_TYPE(builtin_itextureCube, e_itextureCube);
  BUILTIN_TYPE(builtin_iimageCube, e_iimageCube);
  BUILTIN_TYPE(builtin_isamplerCubeArray, e_isamplerCubeArray);
  BUILTIN_TYPE(builtin_itextureCubeArray, e_itextureCubeArray);
  BUILTIN_TYPE(builtin_iimageCubeArray, e_iimageCubeArray);
  BUILTIN_TYPE(builtin_isamplerBuffer, e_isamplerBuffer);
  BUILTIN_TYPE(builtin_itextureBuffer, e_itextureBuffer);
  BUILTIN_TYPE(builtin_iimageBuffer, e_iimageBuffer);
  BUILTIN_TYPE(builtin_isubpassInput, e_isubpassInput);
  BUILTIN_TYPE(builtin_isubpassInputMS, e_isubpassInputMS);
  BUILTIN_TYPE(builtin_usampler1D, e_usampler1D);
  BUILTIN_TYPE(builtin_utexture1D, e_utexture1D);
  BUILTIN_TYPE(builtin_uimage1D, e_uimage1D);
  BUILTIN_TYPE(builtin_usampler1DArray, e_usampler1DArray);
  BUILTIN_TYPE(builtin_utexture1DArray, e_utexture1DArray);
  BUILTIN_TYPE(builtin_uimage1DArray, e_uimage1DArray);
  BUILTIN_TYPE(builtin_usampler2D, e_usampler2D);
  BUILTIN_TYPE(builtin_utexture2D, e_utexture2D);
  BUILTIN_TYPE(builtin_uimage2D, e_uimage2D);
  BUILTIN_TYPE(builtin_usampler2DArray, e_usampler2DArray);
  BUILTIN_TYPE(builtin_utexture2DArray, e_utexture2DArray);
  BUILTIN_TYPE(builtin_uimage2DArray, e_uimage2DArray);
  BUILTIN_TYPE(builtin_usampler2DMS, e_usampler2DMS);
  BUILTIN_TYPE(builtin_utexture2DMS, e_utexture2DMS);
  BUILTIN_TYPE(builtin_uimage2DMS, e_uimage2DMS);
  BUILTIN_TYPE(builtin_usampler2DMSArray, e_usampler2DMSArray);
  BUILTIN_TYPE(builtin_utexture2DMSArray, e_utexture2DMSArray);
  BUILTIN_TYPE(builtin_uimage2DMSArray, e_uimage2DMSArray);
  BUILTIN_TYPE(builtin_usampler2DRect, e_usampler2DRect);
  BUILTIN_TYPE(builtin_utexture2DRect, e_utexture2DRect);
  BUILTIN_TYPE(builtin_uimage2DRect, e_uimage2DRect);
  BUILTIN_TYPE(builtin_usampler3D, e_usampler3D);
  BUILTIN_TYPE(builtin_utexture3D, e_utexture3D);
  BUILTIN_TYPE(builtin_uimage3D, e_uimage3D);
  BUILTIN_TYPE(builtin_usamplerCube, e_usamplerCube);
  BUILTIN_TYPE(builtin_utextureCube, e_utextureCube);
  BUILTIN_TYPE(builtin_uimageCube, e_uimageCube);
  BUILTIN_TYPE(builtin_usamplerCubeArray, e_usamplerCubeArray);
  BUILTIN_TYPE(builtin_utextureCubeArray, e_utextureCubeArray);
  BUILTIN_TYPE(builtin_uimageCubeArray, e_uimageCubeArray);
  BUILTIN_TYPE(builtin_usamplerBuffer, e_usamplerBuffer);
  BUILTIN_TYPE(builtin_utextureBuffer, e_utextureBuffer);
  BUILTIN_TYPE(builtin_uimageBuffer, e_uimageBuffer);
  BUILTIN_TYPE(builtin_usubpassInput, e_usubpassInput);
  BUILTIN_TYPE(builtin_usubpassInputMS, e_usubpassInputMS);
  BUILTIN_TYPE(builtin_sampler, e_sampler);
  BUILTIN_TYPE(builtin_samplerShadow, e_samplerShadow);

  ast::Type_Builtin const* get_builtin_type(ast::Type_Builtin_Kind const type)
  {
    switch(type) {
    case ast::Type_Builtin_Kind::e_void:
      return &builtin_void;
    case ast::Type_Builtin_Kind::e_bool:
      return &builtin_bool;
    case ast::Type_Builtin_Kind::e_int:
      return &builtin_int;
    case ast::Type_Builtin_Kind::e_uint:
      return &builtin_uint;
    case ast::Type_Builtin_Kind::e_float:
      return &builtin_float;
    case ast::Type_Builtin_Kind::e_double:
      return &builtin_double;
    case ast::Type_Builtin_Kind::e_vec2:
      return &builtin_vec2;
    case ast::Type_Builtin_Kind::e_vec3:
      return &builtin_vec3;
    case ast::Type_Builtin_Kind::e_vec4:
      return &builtin_vec4;
    case ast::Type_Builtin_Kind::e_dvec2:
      return &builtin_dvec2;
    case ast::Type_Builtin_Kind::e_dvec3:
      return &builtin_dvec3;
    case ast::Type_Builtin_Kind::e_dvec4:
      return &builtin_dvec4;
    case ast::Type_Builtin_Kind::e_bvec2:
      return &builtin_bvec2;
    case ast::Type_Builtin_Kind::e_bvec3:
      return &builtin_bvec3;
    case ast::Type_Builtin_Kind::e_bvec4:
      return &builtin_bvec4;
    case ast::Type_Builtin_Kind::e_ivec2:
      return &builtin_ivec2;
    case ast::Type_Builtin_Kind::e_ivec3:
      return &builtin_ivec3;
    case ast::Type_Builtin_Kind::e_ivec4:
      return &builtin_ivec4;
    case ast::Type_Builtin_Kind::e_uvec2:
      return &builtin_uvec2;
    case ast::Type_Builtin_Kind::e_uvec3:
      return &builtin_uvec3;
    case ast::Type_Builtin_Kind::e_uvec4:
      return &builtin_uvec4;
    case ast::Type_Builtin_Kind::e_mat2:
      return &builtin_mat2;
    case ast::Type_Builtin_Kind::e_mat3:
      return &builtin_mat3;
    case ast::Type_Builtin_Kind::e_mat4:
      return &builtin_mat4;
    case ast::Type_Builtin_Kind::e_mat2x3:
      return &builtin_mat2x3;
    case ast::Type_Builtin_Kind::e_mat2x4:
      return &builtin_mat2x4;
    case ast::Type_Builtin_Kind::e_mat3x2:
      return &builtin_mat3x2;
    case ast::Type_Builtin_Kind::e_mat3x4:
      return &builtin_mat3x4;
    case ast::Type_Builtin_Kind::e_mat4x2:
      return &builtin_mat4x2;
    case ast::Type_Builtin_Kind::e_mat4x3:
      return &builtin_mat4x3;
    case ast::Type_Builtin_Kind::e_dmat2:
      return &builtin_dmat2;
    case ast::Type_Builtin_Kind::e_dmat3:
      return &builtin_dmat3;
    case ast::Type_Builtin_Kind::e_dmat4:
      return &builtin_dmat4;
    case ast::Type_Builtin_Kind::e_dmat2x3:
      return &builtin_dmat2x3;
    case ast::Type_Builtin_Kind::e_dmat2x4:
      return &builtin_dmat2x4;
    case ast::Type_Builtin_Kind::e_dmat3x2:
      return &builtin_dmat3x2;
    case ast::Type_Builtin_Kind::e_dmat3x4:
      return &builtin_dmat3x4;
    case ast::Type_Builtin_Kind::e_dmat4x2:
      return &builtin_dmat4x2;
    case ast::Type_Builtin_Kind::e_dmat4x3:
      return &builtin_dmat4x3;
    case ast::Type_Builtin_Kind::e_sampler1D:
      return &builtin_sampler1D;
    case ast::Type_Builtin_Kind::e_texture1D:
      return &builtin_texture1D;
    case ast::Type_Builtin_Kind::e_image1D:
      return &builtin_image1D;
    case ast::Type_Builtin_Kind::e_sampler1DShadow:
      return &builtin_sampler1DShadow;
    case ast::Type_Builtin_Kind::e_sampler1DArray:
      return &builtin_sampler1DArray;
    case ast::Type_Builtin_Kind::e_texture1DArray:
      return &builtin_texture1DArray;
    case ast::Type_Builtin_Kind::e_image1DArray:
      return &builtin_image1DArray;
    case ast::Type_Builtin_Kind::e_sampler1DArrayShadow:
      return &builtin_sampler1DArrayShadow;
    case ast::Type_Builtin_Kind::e_sampler2D:
      return &builtin_sampler2D;
    case ast::Type_Builtin_Kind::e_texture2D:
      return &builtin_texture2D;
    case ast::Type_Builtin_Kind::e_image2D:
      return &builtin_image2D;
    case ast::Type_Builtin_Kind::e_sampler2DShadow:
      return &builtin_sampler2DShadow;
    case ast::Type_Builtin_Kind::e_sampler2DArray:
      return &builtin_sampler2DArray;
    case ast::Type_Builtin_Kind::e_texture2DArray:
      return &builtin_texture2DArray;
    case ast::Type_Builtin_Kind::e_image2DArray:
      return &builtin_image2DArray;
    case ast::Type_Builtin_Kind::e_sampler2DArrayShadow:
      return &builtin_sampler2DArrayShadow;
    case ast::Type_Builtin_Kind::e_sampler2DMS:
      return &builtin_sampler2DMS;
    case ast::Type_Builtin_Kind::e_texture2DMS:
      return &builtin_texture2DMS;
    case ast::Type_Builtin_Kind::e_image2DMS:
      return &builtin_image2DMS;
    case ast::Type_Builtin_Kind::e_sampler2DMSArray:
      return &builtin_sampler2DMSArray;
    case ast::Type_Builtin_Kind::e_texture2DMSArray:
      return &builtin_texture2DMSArray;
    case ast::Type_Builtin_Kind::e_image2DMSArray:
      return &builtin_image2DMSArray;
    case ast::Type_Builtin_Kind::e_sampler2DRect:
      return &builtin_sampler2DRect;
    case ast::Type_Builtin_Kind::e_texture2DRect:
      return &builtin_texture2DRect;
    case ast::Type_Builtin_Kind::e_image2DRect:
      return &builtin_image2DRect;
    case ast::Type_Builtin_Kind::e_sampler2DRectShadow:
      return &builtin_sampler2DRectShadow;
    case ast::Type_Builtin_Kind::e_sampler3D:
      return &builtin_sampler3D;
    case ast::Type_Builtin_Kind::e_texture3D:
      return &builtin_texture3D;
    case ast::Type_Builtin_Kind::e_image3D:
      return &builtin_image3D;
    case ast::Type_Builtin_Kind::e_samplerCube:
      return &builtin_samplerCube;
    case ast::Type_Builtin_Kind::e_textureCube:
      return &builtin_textureCube;
    case ast::Type_Builtin_Kind::e_imageCube:
      return &builtin_imageCube;
    case ast::Type_Builtin_Kind::e_samplerCubeShadow:
      return &builtin_samplerCubeShadow;
    case ast::Type_Builtin_Kind::e_samplerCubeArray:
      return &builtin_samplerCubeArray;
    case ast::Type_Builtin_Kind::e_textureCubeArray:
      return &builtin_textureCubeArray;
    case ast::Type_Builtin_Kind::e_imageCubeArray:
      return &builtin_imageCubeArray;
    case ast::Type_Builtin_Kind::e_samplerCubeArrayShadow:
      return &builtin_samplerCubeArrayShadow;
    case ast::Type_Builtin_Kind::e_samplerBuffer:
      return &builtin_samplerBuffer;
    case ast::Type_Builtin_Kind::e_textureBuffer:
      return &builtin_textureBuffer;
    case ast::Type_Builtin_Kind::e_imageBuffer:
      return &builtin_imageBuffer;
    case ast::Type_Builtin_Kind::e_subpassInput:
      return &builtin_subpassInput;
    case ast::Type_Builtin_Kind::e_subpassInputMS:
      return &builtin_subpassInputMS;
    case ast::Type_Builtin_Kind::e_isampler1D:
      return &builtin_isampler1D;
    case ast::Type_Builtin_Kind::e_itexture1D:
      return &builtin_itexture1D;
    case ast::Type_Builtin_Kind::e_iimage1D:
      return &builtin_iimage1D;
    case ast::Type_Builtin_Kind::e_isampler1DArray:
      return &builtin_isampler1DArray;
    case ast::Type_Builtin_Kind::e_itexture1DArray:
      return &builtin_itexture1DArray;
    case ast::Type_Builtin_Kind::e_iimage1DArray:
      return &builtin_iimage1DArray;
    case ast::Type_Builtin_Kind::e_isampler2D:
      return &builtin_isampler2D;
    case ast::Type_Builtin_Kind::e_itexture2D:
      return &builtin_itexture2D;
    case ast::Type_Builtin_Kind::e_iimage2D:
      return &builtin_iimage2D;
    case ast::Type_Builtin_Kind::e_isampler2DArray:
      return &builtin_isampler2DArray;
    case ast::Type_Builtin_Kind::e_itexture2DArray:
      return &builtin_itexture2DArray;
    case ast::Type_Builtin_Kind::e_iimage2DArray:
      return &builtin_iimage2DArray;
    case ast::Type_Builtin_Kind::e_isampler2DMS:
      return &builtin_isampler2DMS;
    case ast::Type_Builtin_Kind::e_itexture2DMS:
      return &builtin_itexture2DMS;
    case ast::Type_Builtin_Kind::e_iimage2DMS:
      return &builtin_iimage2DMS;
    case ast::Type_Builtin_Kind::e_isampler2DMSArray:
      return &builtin_isampler2DMSArray;
    case ast::Type_Builtin_Kind::e_itexture2DMSArray:
      return &builtin_itexture2DMSArray;
    case ast::Type_Builtin_Kind::e_iimage2DMSArray:
      return &builtin_iimage2DMSArray;
    case ast::Type_Builtin_Kind::e_isampler2DRect:
      return &builtin_isampler2DRect;
    case ast::Type_Builtin_Kind::e_itexture2DRect:
      return &builtin_itexture2DRect;
    case ast::Type_Builtin_Kind::e_iimage2DRect:
      return &builtin_iimage2DRect;
    case ast::Type_Builtin_Kind::e_isampler3D:
      return &builtin_isampler3D;
    case ast::Type_Builtin_Kind::e_itexture3D:
      return &builtin_itexture3D;
    case ast::Type_Builtin_Kind::e_iimage3D:
      return &builtin_iimage3D;
    case ast::Type_Builtin_Kind::e_isamplerCube:
      return &builtin_isamplerCube;
    case ast::Type_Builtin_Kind::e_itextureCube:
      return &builtin_itextureCube;
    case ast::Type_Builtin_Kind::e_iimageCube:
      return &builtin_iimageCube;
    case ast::Type_Builtin_Kind::e_isamplerCubeArray:
      return &builtin_isamplerCubeArray;
    case ast::Type_Builtin_Kind::e_itextureCubeArray:
      return &builtin_itextureCubeArray;
    case ast::Type_Builtin_Kind::e_iimageCubeArray:
      return &builtin_iimageCubeArray;
    case ast::Type_Builtin_Kind::e_isamplerBuffer:
      return &builtin_isamplerBuffer;
    case ast::Type_Builtin_Kind::e_itextureBuffer:
      return &builtin_itextureBuffer;
    case ast::Type_Builtin_Kind::e_iimageBuffer:
      return &builtin_iimageBuffer;
    case ast::Type_Builtin_Kind::e_isubpassInput:
      return &builtin_isubpassInput;
    case ast::Type_Builtin_Kind::e_isubpassInputMS:
      return &builtin_isubpassInputMS;
    case ast::Type_Builtin_Kind::e_usampler1D:
      return &builtin_usampler1D;
    case ast::Type_Builtin_Kind::e_utexture1D:
      return &builtin_utexture1D;
    case ast::Type_Builtin_Kind::e_uimage1D:
      return &builtin_uimage1D;
    case ast::Type_Builtin_Kind::e_usampler1DArray:
      return &builtin_usampler1DArray;
    case ast::Type_Builtin_Kind::e_utexture1DArray:
      return &builtin_utexture1DArray;
    case ast::Type_Builtin_Kind::e_uimage1DArray:
      return &builtin_uimage1DArray;
    case ast::Type_Builtin_Kind::e_usampler2D:
      return &builtin_usampler2D;
    case ast::Type_Builtin_Kind::e_utexture2D:
      return &builtin_utexture2D;
    case ast::Type_Builtin_Kind::e_uimage2D:
      return &builtin_uimage2D;
    case ast::Type_Builtin_Kind::e_usampler2DArray:
      return &builtin_usampler2DArray;
    case ast::Type_Builtin_Kind::e_utexture2DArray:
      return &builtin_utexture2DArray;
    case ast::Type_Builtin_Kind::e_uimage2DArray:
      return &builtin_uimage2DArray;
    case ast::Type_Builtin_Kind::e_usampler2DMS:
      return &builtin_usampler2DMS;
    case ast::Type_Builtin_Kind::e_utexture2DMS:
      return &builtin_utexture2DMS;
    case ast::Type_Builtin_Kind::e_uimage2DMS:
      return &builtin_uimage2DMS;
    case ast::Type_Builtin_Kind::e_usampler2DMSArray:
      return &builtin_usampler2DMSArray;
    case ast::Type_Builtin_Kind::e_utexture2DMSArray:
      return &builtin_utexture2DMSArray;
    case ast::Type_Builtin_Kind::e_uimage2DMSArray:
      return &builtin_uimage2DMSArray;
    case ast::Type_Builtin_Kind::e_usampler2DRect:
      return &builtin_usampler2DRect;
    case ast::Type_Builtin_Kind::e_utexture2DRect:
      return &builtin_utexture2DRect;
    case ast::Type_Builtin_Kind::e_uimage2DRect:
      return &builtin_uimage2DRect;
    case ast::Type_Builtin_Kind::e_usampler3D:
      return &builtin_usampler3D;
    case ast::Type_Builtin_Kind::e_utexture3D:
      return &builtin_utexture3D;
    case ast::Type_Builtin_Kind::e_uimage3D:
      return &builtin_uimage3D;
    case ast::Type_Builtin_Kind::e_usamplerCube:
      return &builtin_usamplerCube;
    case ast::Type_Builtin_Kind::e_utextureCube:
      return &builtin_utextureCube;
    case ast::Type_Builtin_Kind::e_uimageCube:
      return &builtin_uimageCube;
    case ast::Type_Builtin_Kind::e_usamplerCubeArray:
      return &builtin_usamplerCubeArray;
    case ast::Type_Builtin_Kind::e_utextureCubeArray:
      return &builtin_utextureCubeArray;
    case ast::Type_Builtin_Kind::e_uimageCubeArray:
      return &builtin_uimageCubeArray;
    case ast::Type_Builtin_Kind::e_usamplerBuffer:
      return &builtin_usamplerBuffer;
    case ast::Type_Builtin_Kind::e_utextureBuffer:
      return &builtin_utextureBuffer;
    case ast::Type_Builtin_Kind::e_uimageBuffer:
      return &builtin_uimageBuffer;
    case ast::Type_Builtin_Kind::e_usubpassInput:
      return &builtin_usubpassInput;
    case ast::Type_Builtin_Kind::e_usubpassInputMS:
      return &builtin_usubpassInputMS;
    case ast::Type_Builtin_Kind::e_sampler:
      return &builtin_sampler;
    case ast::Type_Builtin_Kind::e_samplerShadow:
      return &builtin_samplerShadow;
    }
  }
} // namespace vush
